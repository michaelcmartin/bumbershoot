;;; This is a fixed-up copy of the sample font presented in the
;;; datasheets for the TMS9918 series of VDPs. It presents 96
;;; characters in ASCII order starting at 0x20, with a checkerboard
;;; pattern replacing the DELETE code. Load it into the pattern table
;;; with an offset of 0x100.
;;;
;;; Typos in the hex codes have been repaired so the display matches
;;; the diagrams, and the pipe character at ASCII code has been drawn
;;; properly to match the actual character.

	.byte	$00,$00,$00,$00,$00,$00,$00,$00  ; Space
	.byte	$20,$20,$20,$20,$20,$00,$20,$00  ; !
	.byte	$50,$50,$50,$00,$00,$00,$00,$00  ; "
	.byte	$50,$50,$F8,$50,$F8,$50,$50,$00  ; #
	.byte	$20,$78,$A0,$70,$28,$F0,$20,$00  ; $
	.byte	$C0,$C8,$10,$20,$40,$98,$18,$00  ; %
	.byte	$40,$A0,$A0,$40,$A8,$90,$68,$00  ; &
	.byte	$20,$20,$20,$00,$00,$00,$00,$00  ; '
	.byte	$20,$40,$80,$80,$80,$40,$20,$00  ; (
	.byte	$20,$10,$08,$08,$08,$10,$20,$00  ; )
	.byte	$20,$A8,$70,$20,$70,$A8,$20,$00  ; *
	.byte	$00,$20,$20,$F8,$20,$20,$00,$00  ; +
	.byte	$00,$00,$00,$00,$20,$20,$40,$00  ; ,
	.byte	$00,$00,$00,$F8,$00,$00,$00,$00  ; -
	.byte	$00,$00,$00,$00,$00,$00,$20,$00  ; .
	.byte	$00,$08,$10,$20,$40,$80,$00,$00  ; /
	.byte	$70,$88,$98,$A8,$C8,$88,$70,$00  ; 0
	.byte	$20,$60,$20,$20,$20,$20,$70,$00  ; 1
	.byte	$70,$88,$08,$30,$40,$80,$F8,$00  ; 2
	.byte	$F8,$08,$10,$30,$08,$88,$70,$00  ; 3
	.byte	$10,$30,$50,$90,$F8,$10,$10,$00  ; 4
	.byte	$F8,$80,$F0,$08,$08,$88,$70,$00  ; 5
	.byte	$38,$40,$80,$F0,$88,$88,$70,$00  ; 6
	.byte	$F8,$08,$10,$20,$40,$40,$40,$00  ; 7
	.byte	$70,$88,$88,$70,$88,$88,$70,$00  ; 8
	.byte	$70,$88,$88,$78,$08,$10,$E0,$00  ; 9
	.byte	$00,$00,$20,$00,$20,$00,$00,$00  ; :
	.byte	$00,$00,$20,$00,$20,$20,$40,$00  ; ;
	.byte	$10,$20,$40,$80,$40,$20,$10,$00  ; <
	.byte	$00,$00,$F8,$00,$F8,$00,$00,$00  ; =
	.byte	$40,$20,$10,$08,$10,$20,$40,$00  ; >
	.byte	$70,$88,$10,$20,$20,$00,$20,$00  ; ?
	.byte	$70,$88,$A8,$B8,$B0,$80,$78,$00  ; @
	.byte	$20,$50,$88,$88,$F8,$88,$88,$00  ; A
	.byte	$F0,$88,$88,$F0,$88,$88,$F0,$00  ; B
	.byte	$70,$88,$80,$80,$80,$88,$70,$00  ; C
	.byte	$F0,$88,$88,$88,$88,$88,$F0,$00  ; D
	.byte	$F8,$80,$80,$F0,$80,$80,$F8,$00  ; E
	.byte	$F8,$80,$80,$F0,$80,$80,$80,$00  ; F
	.byte	$78,$80,$80,$80,$98,$88,$78,$00  ; G
	.byte	$88,$88,$88,$F8,$88,$88,$88,$00  ; H
	.byte	$70,$20,$20,$20,$20,$20,$70,$00  ; I
	.byte	$08,$08,$08,$08,$08,$88,$70,$00  ; J
	.byte	$88,$90,$A0,$C0,$A0,$90,$88,$00  ; K
	.byte	$80,$80,$80,$80,$80,$80,$F8,$00  ; L
	.byte	$88,$D8,$A8,$A8,$88,$88,$88,$00  ; M
	.byte	$88,$88,$C8,$A8,$98,$88,$88,$00  ; N
	.byte	$70,$88,$88,$88,$88,$88,$70,$00  ; O
	.byte	$F0,$88,$88,$F0,$80,$80,$80,$00  ; P
	.byte	$70,$88,$88,$88,$A8,$90,$68,$00  ; Q
	.byte	$F0,$88,$88,$F0,$A0,$90,$88,$00  ; R
	.byte	$70,$88,$80,$70,$08,$88,$70,$00  ; S
	.byte	$F8,$20,$20,$20,$20,$20,$20,$00  ; T
	.byte	$88,$88,$88,$88,$88,$88,$70,$00  ; U
	.byte	$88,$88,$88,$88,$88,$50,$20,$00  ; V
	.byte	$88,$88,$88,$A8,$A8,$D8,$88,$00  ; W
	.byte	$88,$88,$50,$20,$50,$88,$88,$00  ; X
	.byte	$88,$88,$50,$20,$20,$20,$20,$00  ; Y
	.byte	$F8,$08,$10,$20,$40,$80,$F8,$00  ; Z
	.byte	$F8,$C0,$C0,$C0,$C0,$C0,$F8,$00  ; [
	.byte	$00,$80,$40,$20,$10,$08,$00,$00  ; \
	.byte	$F8,$18,$18,$18,$18,$18,$F8,$00  ; ]
	.byte	$00,$00,$20,$50,$88,$00,$00,$00  ; ^
	.byte	$00,$00,$00,$00,$00,$00,$00,$F8  ; _
	.byte	$40,$20,$10,$00,$00,$00,$00,$00  ; `
	.byte	$00,$00,$70,$88,$F8,$88,$88,$00  ; a
	.byte	$00,$00,$F0,$48,$70,$48,$F0,$00  ; b
	.byte	$00,$00,$78,$80,$80,$80,$78,$00  ; c
	.byte	$00,$00,$F0,$48,$48,$48,$F0,$00  ; d
	.byte	$00,$00,$F0,$80,$E0,$80,$F0,$00  ; e
	.byte	$00,$00,$F0,$80,$E0,$80,$80,$00  ; f
	.byte	$00,$00,$78,$80,$B8,$88,$70,$00  ; g
	.byte	$00,$00,$88,$88,$F8,$88,$88,$00  ; h
	.byte	$00,$00,$F8,$20,$20,$20,$F8,$00  ; i
	.byte	$00,$00,$70,$20,$20,$A0,$E0,$00  ; j
	.byte	$00,$00,$90,$A0,$C0,$A0,$90,$00  ; k
	.byte	$00,$00,$80,$80,$80,$80,$F8,$00  ; l
	.byte	$00,$00,$88,$D8,$A8,$88,$88,$00  ; m
	.byte	$00,$00,$88,$C8,$A8,$98,$88,$00  ; n
	.byte	$00,$00,$F8,$88,$88,$88,$F8,$00  ; o
	.byte	$00,$00,$F0,$88,$F0,$80,$80,$00  ; p
	.byte	$00,$00,$F8,$88,$A8,$90,$E8,$00  ; q
	.byte	$00,$00,$F8,$88,$F8,$A0,$90,$00  ; r
	.byte	$00,$00,$78,$80,$70,$08,$F0,$00  ; s
	.byte	$00,$00,$F8,$20,$20,$20,$20,$00  ; t
	.byte	$00,$00,$88,$88,$88,$88,$70,$00  ; u
	.byte	$00,$00,$88,$88,$90,$A0,$40,$00  ; v
	.byte	$00,$00,$88,$88,$A8,$D8,$88,$00  ; w
	.byte	$00,$00,$88,$50,$20,$50,$88,$00  ; x
	.byte	$00,$00,$88,$50,$20,$20,$20,$00  ; y
	.byte	$00,$00,$F8,$10,$20,$40,$F8,$00  ; z
	.byte	$38,$40,$20,$C0,$20,$40,$38,$00  ; {
	.byte	$20,$20,$20,$20,$20,$20,$20,$00  ; |
	.byte	$E0,$10,$20,$18,$20,$10,$E0,$00  ; }
	.byte	$40,$A8,$10,$00,$00,$00,$00,$00  ; ~
	.byte	$A8,$50,$A8,$50,$A8,$50,$A8,$00  ; Checker
